@mixin breakpoint($point) {
    @if $point == large {
        @media (min-width: $screen-large) {
            @content;
        }
    }
    @else if $point == desktop {
        @media (min-width: $screen-desktop) {
            @content;
        }
    }
    @else if $point == tablet {
        @media (min-width: $screen-tablet) {
            @content;
        }
    }
    @else if $point == phone {
        @media (min-width: $screen-phone) {
            @content;
        }
    }
}

@mixin font-icon($font-size: $font-size-base) {
    display: inline-block;
    font-weight: normal;
    font-style: normal;
    line-height: 1;
    font-family: $font-family-icons;
    font-size: $font-size;
    text-rendering: auto; // optimizelegibility throws things off #1094
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

@mixin font-base($weight: normal, $style: normal) {
	font-family: $font-family-base;
	line-height: $line-height-base;
	font-weight: $weight;
	font-style: $style;
}

@mixin font-heading($line-height: 1.1, $weight: 700) {
	font-family: $font-family-base;
	line-height: $line-height;
	font-weight: $weight;
	font-style: normal;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

@mixin visuallyHidden() {
    border: 0;
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap; /* 1 */
}
